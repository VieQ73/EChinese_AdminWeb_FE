Table MockTests {
  id uuid [primary key, default: `uuid_generate_v4()`]
  type varchar(10) [not null, note: "Enum: 'HSK', 'TOCFL', 'D4', 'HSKK'"]
  level varchar(10) [not null, note: "Ví dụ: HSK1–HSK6, HSK7-9, TOCFL A1–C2"]
  title varchar(100) [not null]
  total_time_limit int [not null, note: "Tổng thời gian làm bài (phút)"]
  total_max_score int [not null]
  instructions text
  is_active boolean [default: true]
  created_by uuid [note: "Người tạo (Admin)"]
  created_at timestamptz [default: `CURRENT_TIMESTAMP`]
  updated_at timestamptz [default: `CURRENT_TIMESTAMP`]
  deleted_at timestamptz [note: "Soft delete (ẩn tạm thời)"]

  Note: '''
  - Bảng gốc quản lý đề thi thử.
  - Ví dụ: 'HSK3 - Đề số 1'.
  '''
  
  Indexes {
    (type, level) [type: btree]
    created_by [type: btree]
    is_active [type: btree]
  }
}

Table MockTestSections {
  id uuid [primary key, default: `uuid_generate_v4()`]
  test_id uuid [not null]
  name varchar(50) [not null, note: "Listening, Reading, Writing, Speaking..."]
  order_no int [not null, default: 1]
  time_limit int [note: "Giới hạn thời gian làm section (phút), NULL nếu không tách riêng"]
  max_score int [not null]
  total_questions int [not null]

  Note: '''
  - Mỗi đề thi có nhiều section.
  - order_no để sắp xếp (ví dụ Listening = 1, Reading = 2).
  '''
  
  Indexes {
    test_id [type: btree]
    order_no [type: btree]
  }
}

Table MockTestQuestions {
  id uuid [primary key, default: `uuid_generate_v4()`]
  section_id uuid [not null]
  order_no int [not null]
  type varchar(20) [not null, note: "Enum: 'mcq','fill','write','repeat','describe','answer'"]
  text text [note: "Nội dung câu hỏi"]
  options jsonb [note: "Array<string> cho MCQ, null nếu không có lựa chọn"]
  correct_answer text [note: "Chỉ số cho MCQ hoặc text cho dạng khác"]
  explanation text [note: "Giải thích đáp án (dùng khi review)"]
  media_id uuid [note: "Tham chiếu Media (audio/hình ảnh)"]
  start_time int [note: "Thời điểm bắt đầu (giây) trong file audio"]
  end_time int [note: "Thời điểm kết thúc (giây) trong file audio"]
  is_visual boolean [default: false, note: "true nếu là câu dựa trên hình ảnh"]

  Note: '''
  - Câu hỏi có thể đi kèm file nghe hoặc hình.
  - start_time/end_time dùng để phát lại 1 đoạn audio trong file nghe lớn.
  '''
  
  Indexes {
    section_id [type: btree]
    order_no [type: btree]
    type [type: btree]
    media_id [type: btree]
  }
}

Table UserTestScores {
  id uuid [primary key, default: `uuid_generate_v4()`]
  user_id uuid [not null]
  test_id uuid [not null]
  highest_total_score int [default: 0]
  created_at timestamptz [default: `CURRENT_TIMESTAMP`]

  Note: '''
  - Lưu điểm cao nhất của user cho từng đề.
  - Dùng để xếp hạng nhanh (leaderboard).
  - Chi tiết từng lần thi tách ra ở bảng UserTestAttempts.
  '''

  Indexes {
    (user_id, test_id) [unique]
    highest_total_score [type: btree]
    created_at [type: btree]
  }
}

Table UserTestAttempts {
  id uuid [primary key, default: `uuid_generate_v4()`]
  user_id uuid [not null]
  test_id uuid [not null]
  started_at timestamptz [default: `CURRENT_TIMESTAMP`]
  submitted_at timestamptz
  total_score int
  section_scores jsonb [note: "Ví dụ: [{section_id, score, completed_questions, total_questions}]"]

  Note: '''
  - Mỗi lần thi của user = 1 record.
  - section_scores lưu điểm chi tiết theo phần.
  '''

  Indexes {
    user_id [type: btree]
    test_id [type: btree]
    submitted_at [type: btree]
  }
}

Table UserTestAnswers {
  id uuid [primary key, default: `uuid_generate_v4()`]
  attempt_id uuid [not null]
  question_id uuid [not null]
  selected_answer text
  is_correct boolean
  time_spent int [note: "Thời gian làm câu (giây)"]
  reviewed boolean [default: false, note: "Người dùng đã xem lại lời giải chưa"]

  Note: '''
  - Lưu chi tiết từng câu user đã làm.
  - Phục vụ tính năng review đáp án sau khi thi.
  - reviewed = true nếu user đã click xem giải thích.
  '''

  Indexes {
    attempt_id [type: btree]
    question_id [type: btree]
    is_correct [type: btree]
  }
}

Table Notebooks {
  id uuid [primary key, default: `uuid_generate_v4()`]
  user_id uuid
  name varchar(100) [not null]
  vocab_count int [default: 0]
  created_at timestamptz [default: `CURRENT_TIMESTAMP`]
  options json [not null, note: "{show_hanzi: bool, show_pinyin: bool, show_meaning: bool, sort_by: string}"]
  is_premium boolean [default: false]
  
  Note: '''
  - Sổ tay cá nhân hoặc sẵn có (user_id NULL cho sẵn có).
  - Trigger cập nhật vocab_count từ NotebookVocabItems.
  - Truy cập premium kiểm tra qua Users.subscription_id.
  '''
  
  Indexes {
    user_id [type: btree]
  }
}

Table Vocabulary {
  id uuid [primary key, default: `uuid_generate_v4()`]
  hanzi varchar(50) [not null]
  pinyin varchar(50) [not null]
  meaning text [not null]
  notes text
  level text[] [not null, note: "Một từ có thể thuộc nhiều HSK levels: HSK1, HSK2, ..., HSK7-9, HSKK"]
  image_url text
  deleted_at timestamptz [note: "Soft delete: Cho phép khôi phục trong thời gian ngắn"]

  Note: '''
  - Unique constraint (hanzi+pinyin) để tránh trùng lặp
  - Hard delete chỉ cho Super Admin hoặc cron job
  - Từ vựng có thể liên kết nhiều từ loại (WordType)
  '''

  Indexes {
    (hanzi, pinyin) [unique]
    level [type: gin]
  }
}

Table WordType {
  code varchar(50) [primary key, note: "Enum: Danh từ, Đại từ, Động từ, Tính từ, Trạng từ, Giới từ, Liên từ, Trợ từ, Thán từ, Số từ, Lượng từ, Thành phần câu, Cụm từ"]

  Note: '''
  - Một từ có thể có nhiều từ loại
  '''
}

Table VocabularyWordType {
  vocab_id uuid [not null]
  word_type varchar(50) [not null]

  Note: '''
  - Bảng trung gian N:N giữa Vocabulary và WordType
  - Cho phép một từ vựng có nhiều từ loại
  '''

  Indexes {
    (vocab_id)
    (word_type)
  }

  primary key (vocab_id, word_type)
}

Table NotebookVocabItems {
  notebook_id uuid [not null]
  vocab_id uuid [not null]
  status varchar(20) [not null, note: "Enum: 'đã thuộc', 'chưa thuộc', 'yêu thích', 'không chắc'"]
  added_at timestamptz [default: `CURRENT_TIMESTAMP`]
  
  Note: '''
  - Bảng liên kết N:N cho Notebook-Vocabulary.
  - Thống kê (ví dụ, số từ đã thuộc) qua COUNT GROUP BY status.
  '''
  
  Indexes {
    (notebook_id, vocab_id) [unique]
  }
}

Table Tips {
  id uuid [primary key, default: `uuid_generate_v4()`]
  order int [not null]
  topic varchar(50) [not null, note: "Enum: 'Tất cả', 'Văn hóa', 'Ngữ pháp', 'Từ vựng', 'Phát âm', 'Khẩu ngữ', 'Kỹ năng nghe', 'Kỹ năng đọc', 'Kỹ năng viết', 'Khác'"]
  level varchar(10) [not null, note: "Enum: 'Sơ cấp', 'Trung cấp', 'Cao cấp'"]
  content text [not null]
  answer text
  created_by uuid
  
  Note: '''
  - Mẹo trang chủ với đáp án tùy chọn cho quiz.
  - Tổng số tính toán động.
  - Sử dụng cho mẹo bài học AI nếu lưu riêng.
  '''
  
  Indexes {
    topic [type: btree]
    level [type: btree]
  }
}

Table AILessons {
  id uuid [primary key, default: `uuid_generate_v4()`]
  user_id uuid [not null]
  theme varchar(100) [not null]
  level varchar(10) [not null, note: "Enum: 'Cơ bản', 'Trung cấp', 'Cao cấp'"]
  created_at timestamptz [default: `CURRENT_TIMESTAMP`]
  content json [not null, note: "Structure: {vocabularies: [{vocab_id: uuid (ref Vocabulary.id), audio_url: string (S3 URL, null if not generated)}], phrases: [{vocab_id: uuid (ref Vocabulary.id), audio_url: string (S3 URL, null if not generated)}], tips: [{tip_id: uuid (ref Tips.id, null if not stored separately), vietnamese: string, chinese: string}], dialogues: [{messages: [{text: string (simplified hanzi), pinyin: string, audio_url: string (S3 URL, null if not generated)}]}]}"]
  
  Note: '''
  - Lưu bài học tạo bởi AI.
  - content.vocabularies/phrases reference Vocabulary.id.
  - Lưu bài học tạo bởi AI (chủ đề và mức độ người dùng chọn).
  - content.vocabularies/phrases reference Vocabulary.id để tránh trùng lặp.
  - content.tips có thể reference Tips.id hoặc lưu inline (vietnamese+chinese).
  - content.dialogues lưu dưới dạng JSON (chat-like, với audio URL, chỉ hán tự giản thể).
  - Audio tạo động (TTS API), URL lưu tạm thời.
  '''
  
  Indexes {
    user_id [type: btree]
    (theme, level) [type: btree]
  }
}

// Relationships within this file
Ref: MockTestSections.test_id > MockTests.id [delete: cascade]
Ref: MockTestQuestions.section_id > MockTestSections.id [delete: cascade]
Ref: UserTestScores.test_id > MockTests.id [delete: cascade]
Ref: UserTestAttempts.test_id > MockTests.id [delete: cascade]
Ref: UserTestAnswers.attempt_id > UserTestAttempts.id [delete: cascade]
Ref: UserTestAnswers.question_id > MockTestQuestions.id [delete: cascade]
Ref: NotebookVocabItems.notebook_id > Notebooks.id [delete: cascade]
Ref: NotebookVocabItems.vocab_id > Vocabulary.id [delete: restrict]
Ref: VocabularyWordType.vocab_id > Vocabulary.id [delete: cascade]
Ref: VocabularyWordType.word_type > WordType.code [delete: cascade]