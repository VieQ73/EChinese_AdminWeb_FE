// achievements.dbml

//Table Achievements
Table Achievements {
  id uuid [primary key, default: `uuid_generate_v4()`]
  name varchar(100) [not null, unique, note: "Tên thành tích, ví dụ: 'Gấu chăm chỉ', 'Thánh tra cứu'"]
  description text [not null, note: "Mô tả thành tích, ví dụ: 'Đăng nhập liên tục 7 ngày'"]
  criteria jsonb [not null, note: "Tiêu chí đạt được dưới dạng JSON để linh hoạt, ví dụ: {'type': 'login_streak', 'min_streak': 7} hoặc {'type': 'translation_usage', 'min_count': 30, 'feature': 'ai_translate'}"]
  icon text [note: "URL icon hiển thị cho thành tích"]
  points int [default: 0, note: "Điểm thưởng cộng vào community_points khi đạt được"]
  is_active boolean [default: true, note: "Admin có thể tắt/mở thành tích"]
  created_at timestamptz [default: `CURRENT_TIMESTAMP`]
  updated_at timestamptz [default: `CURRENT_TIMESTAMP`]
  
  Note: '''
  - Quản lý các thành tích (achievements) do admin tạo/sửa.
  - criteria JSONB cho phép định nghĩa linh hoạt các điều kiện (dựa trên UserStreaks, UserUsage, TranslationHistory, etc.).
  - Ví dụ criteria:
    - {'type': 'login_streak', 'min_streak': 7} -> Thành tích 'Gấu chăm chỉ'
    - {'type': 'translation_usage', 'min_count': 30, 'feature': 'ai_translate'} -> Thành tích 'Thánh tra cứu'
    - {'type': 'community_points', 'min_points': 1000} -> Thành tích 'Người đóng góp xuất sắc'
  - Cron job hoặc trigger kiểm tra criteria và cấp thành tích qua UserAchievements.
  - points: Số điểm thưởng, cộng vào Users.community_points khi đạt được.
  '''
  
  Indexes {
    name [unique]
    is_active [type: btree]
  }
}

//Table UserAchievements
Table UserAchievements {
  id uuid [primary key, default: `uuid_generate_v4()`]
  user_id uuid [not null]
  achievement_id uuid [not null]
  achieved_at timestamptz [default: `CURRENT_TIMESTAMP`]
  progress jsonb [note: "Tiến độ hiện tại nếu cần (ví dụ: {'current_count': 25, 'required': 30}), NULL nếu không theo dõi progress"]
  
  Note: '''
  - Liên kết N:N giữa Users và Achievements, lưu thời gian đạt được.
  - progress JSONB để theo dõi tiến độ (nếu thành tích có tiêu chí đếm dần, như số lần dịch).
  - Unique constraint (user_id, achievement_id) để tránh cấp trùng lặp.
  - Cron job update progress và cấp thành tích khi đạt criteria.
  '''
  
  Indexes {
    (user_id, achievement_id) [unique]
    user_id [type: btree]
    achievement_id [type: btree]
    achieved_at [type: btree]
  }
}

// Relationships
Ref: UserAchievements.user_id > Users.id [delete: cascade]
Ref: UserAchievements.achievement_id > Achievements.id [delete: restrict]